-- VHDL Entity ece411.DCache.interface
--
-- Created:
--          by - chachon2.ews (linux-a2.ews.illinois.edu)
--          at - 14:09:42 08/08/14
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2012.1 (Build 6)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.NUMERIC_STD.all;

LIBRARY ece411;
USE ece411.LC3b_types.all;

ENTITY DCache IS
   PORT( 
      CLK         : IN     STD_LOGIC;
      D_ADDRESS   : IN     LC3b_word;
      D_DATAOUT   : IN     LC3b_word;
      D_MREAD_L   : IN     std_logic;
      D_MWRITEH_L : IN     std_logic;
      D_MWRITEL_L : IN     std_logic;
      D_PMDATAIN  : IN     LC3B_OWORD;
      D_PMRESP_H  : IN     STD_LOGIC;
      RESET_L     : IN     STD_LOGIC;
      Way0Write   : IN     STD_LOGIC;
      Way1Write   : IN     STD_LOGIC;
      D_DATAIN    : OUT    LC3B_WORD;
      D_MRESP_H   : OUT    STD_LOGIC;
      D_PMADDRESS : OUT    LC3B_WORD;
      D_PMDATAOUT : OUT    LC3B_OWORD;
      D_PMREAD_L  : OUT    STD_LOGIC;
      D_PMWRITE_L : OUT    STD_LOGIC
   );

-- Declarations

END DCache ;

--
-- VHDL Architecture ece411.DCache.struct
--
-- Created:
--          by - chachon2.ews (linux-a2.ews.illinois.edu)
--          at - 14:09:42 08/08/14
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2012.1 (Build 6)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.NUMERIC_STD.all;

LIBRARY ece411;
USE ece411.LC3b_types.all;


ARCHITECTURE struct OF DCache IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL Dirty      : STD_LOGIC;
   SIGNAL MISS       : STD_LOGIC;
   SIGNAL in_idlehit : STD_LOGIC;
   SIGNAL in_load    : STD_LOGIC;
   SIGNAL in_store   : STD_LOGIC;
   SIGNAL in_wb      : STD_LOGIC;
   SIGNAL store_op   : STD_LOGIC;


   -- Component Declarations
   COMPONENT CacheController
   PORT (
      CLK        : IN     STD_LOGIC ;
      Dirty      : IN     STD_LOGIC ;
      MISS       : IN     STD_LOGIC ;
      PMRESP_H   : IN     STD_LOGIC ;
      RESET_L    : IN     STD_LOGIC ;
      Way0Write  : IN     STD_LOGIC ;
      Way1Write  : IN     STD_LOGIC ;
      store_op   : IN     STD_LOGIC ;
      PMREAD_L   : OUT    STD_LOGIC ;
      PMWRITE_L  : OUT    STD_LOGIC ;
      in_idlehit : OUT    STD_LOGIC ;
      in_load    : OUT    STD_LOGIC ;
      in_store   : OUT    STD_LOGIC ;
      in_wb      : OUT    STD_LOGIC 
   );
   END COMPONENT;
   COMPONENT CacheDatapath
   PORT (
      ADDRESS    : IN     LC3b_word ;
      CLK        : IN     STD_LOGIC ;
      DATAOUT    : IN     LC3b_word ;
      MREAD_L    : IN     std_logic ;
      MWRITEH_L  : IN     std_logic ;
      MWRITEL_L  : IN     std_logic ;
      PMDATAIN   : IN     LC3B_OWORD ;
      PMRESP_H   : IN     STD_LOGIC ;
      RESET_L    : IN     STD_LOGIC ;
      in_idlehit : IN     STD_LOGIC ;
      in_load    : IN     STD_LOGIC ;
      in_store   : IN     STD_LOGIC ;
      in_wb      : IN     STD_LOGIC ;
      DATAIN     : OUT    LC3b_word ;
      Dirty      : OUT    STD_LOGIC ;
      MISS       : OUT    STD_LOGIC ;
      MRESP_H    : OUT    std_logic ;
      PMADDRESS  : OUT    LC3B_WORD ;
      PMDATAOUT  : OUT    LC3B_OWORD ;
      store_op   : OUT    STD_LOGIC 
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : CacheController USE ENTITY ece411.CacheController;
   FOR ALL : CacheDatapath USE ENTITY ece411.CacheDatapath;
   -- pragma synthesis_on


BEGIN

   -- Instance port mappings.
   U_1 : CacheController
      PORT MAP (
         CLK        => CLK,
         Dirty      => Dirty,
         MISS       => MISS,
         PMRESP_H   => D_PMRESP_H,
         RESET_L    => RESET_L,
         Way0Write  => Way0Write,
         Way1Write  => Way1Write,
         store_op   => store_op,
         PMREAD_L   => D_PMREAD_L,
         PMWRITE_L  => D_PMWRITE_L,
         in_idlehit => in_idlehit,
         in_load    => in_load,
         in_store   => in_store,
         in_wb      => in_wb
      );
   U_0 : CacheDatapath
      PORT MAP (
         ADDRESS    => D_ADDRESS,
         CLK        => CLK,
         DATAOUT    => D_DATAOUT,
         MREAD_L    => D_MREAD_L,
         MWRITEH_L  => D_MWRITEH_L,
         MWRITEL_L  => D_MWRITEL_L,
         PMDATAIN   => D_PMDATAIN,
         PMRESP_H   => D_PMRESP_H,
         RESET_L    => RESET_L,
         in_idlehit => in_idlehit,
         in_load    => in_load,
         in_store   => in_store,
         in_wb      => in_wb,
         DATAIN     => D_DATAIN,
         Dirty      => Dirty,
         MISS       => MISS,
         MRESP_H    => D_MRESP_H,
         PMADDRESS  => D_PMADDRESS,
         PMDATAOUT  => D_PMDATAOUT,
         store_op   => store_op
      );

END struct;
