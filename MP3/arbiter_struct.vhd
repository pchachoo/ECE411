-- VHDL Entity ece411.Arbiter.symbol
--
-- Created:
--          by - chachon2.ews (siebl-0222-02.ews.illinois.edu)
--          at - 16:59:31 08/12/14
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2012.1 (Build 6)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.NUMERIC_STD.all;

LIBRARY ece411;
USE ece411.LC3b_types.all;

ENTITY Arbiter IS
   PORT( 
      CLK          : IN     STD_LOGIC;
      RESET_L      : IN     STD_LOGIC;
      D_PMREAD_L   : IN     STD_LOGIC;
      D_PMWRITE_L  : IN     STD_LOGIC;
      I_PMREAD_L   : IN     STD_LOGIC;
      ArbPMADDRESS : OUT    LC3B_WORD;
      ArbPMDATAOUT : OUT    LC3B_oWORD;
      ArbPMREAD_L  : OUT    std_logic;
      ArbPMWRITE_L : OUT    std_logic;
      D_PMDATAIN   : OUT    LC3B_oWORD;
      D_PMRESP_H   : OUT    std_logic;
      I_PMDATAIN   : OUT    LC3B_oWORD;
      I_PMRESP_H   : OUT    std_logic;
      ArbPMDATAIN  : IN     LC3B_oWORD;
      ArbPMRESP_H  : IN     std_logic;
      d_PMaddress  : IN     LC3B_WORD;
      D_PMDATAOUT  : IN     LC3B_oWORD;
      i_PMaddress  : IN     LC3B_WORD
   );

-- Declarations

END Arbiter ;

--
-- VHDL Architecture ece411.Arbiter.struct
--
-- Created:
--          by - chachon2.ews (siebl-0222-02.ews.illinois.edu)
--          at - 16:59:31 08/12/14
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2012.1 (Build 6)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.NUMERIC_STD.all;

LIBRARY ece411;
USE ece411.LC3b_types.all;


ARCHITECTURE struct OF Arbiter IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL ArbiterSel : STD_LOGIC;


   -- Component Declarations
   COMPONENT ArbiterController
   PORT (
      ArbPMRESP_H : IN     STD_LOGIC ;
      D_PMREAD_L  : IN     STD_LOGIC ;
      D_PMWRITE_L : IN     STD_LOGIC ;
      I_PMREAD_L  : IN     STD_LOGIC ;
      RESET_L     : IN     STD_LOGIC ;
      clk         : IN     std_logic ;
      ArbiterSel  : OUT    STD_LOGIC 
   );
   END COMPONENT;
   COMPONENT Arbiter_dpath
   PORT (
      arbitersel   : IN     std_logic  := '0';
      d_PMaddress  : IN     LC3B_WORD ;
      i_PMaddress  : IN     LC3B_WORD ;
      D_PMREAD_L   : IN     std_logic ;
      ArbPMADDRESS : OUT    LC3B_WORD ;
      D_PMDATAOUT  : IN     LC3B_oWORD ;
      I_PMREAD_L   : IN     std_logic ;
      ArbPMREAD_L  : OUT    std_logic ;
      ArbPMDATAOUT : OUT    LC3B_oWORD ;
      ArbPMWRITE_L : OUT    std_logic ;
      D_PMWRITE_L  : IN     std_logic ;
      ArbPMRESP_H  : IN     std_logic ;
      ArbPMDATAIN  : IN     LC3B_oWORD ;
      I_PMRESP_H   : OUT    std_logic ;
      D_PMRESP_H   : OUT    std_logic ;
      I_PMDATAIN   : OUT    LC3B_oWORD ;
      D_PMDATAIN   : OUT    LC3B_oWORD 
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : ArbiterController USE ENTITY ece411.ArbiterController;
   FOR ALL : Arbiter_dpath USE ENTITY ece411.Arbiter_dpath;
   -- pragma synthesis_on


BEGIN

   -- Instance port mappings.
   aArbitercontroller : ArbiterController
      PORT MAP (
         ArbPMRESP_H => ArbPMRESP_H,
         D_PMREAD_L  => D_PMREAD_L,
         D_PMWRITE_L => D_PMWRITE_L,
         I_PMREAD_L  => I_PMREAD_L,
         RESET_L     => RESET_L,
         clk         => CLK,
         ArbiterSel  => ArbiterSel
      );
   aArbiterDPATH : Arbiter_dpath
      PORT MAP (
         arbitersel   => ArbiterSel,
         d_PMaddress  => d_PMaddress,
         i_PMaddress  => i_PMaddress,
         D_PMREAD_L   => D_PMREAD_L,
         ArbPMADDRESS => ArbPMADDRESS,
         D_PMDATAOUT  => D_PMDATAOUT,
         I_PMREAD_L   => I_PMREAD_L,
         ArbPMREAD_L  => ArbPMREAD_L,
         ArbPMDATAOUT => ArbPMDATAOUT,
         ArbPMWRITE_L => ArbPMWRITE_L,
         D_PMWRITE_L  => D_PMWRITE_L,
         ArbPMRESP_H  => ArbPMRESP_H,
         ArbPMDATAIN  => ArbPMDATAIN,
         I_PMRESP_H   => I_PMRESP_H,
         D_PMRESP_H   => D_PMRESP_H,
         I_PMDATAIN   => I_PMDATAIN,
         D_PMDATAIN   => D_PMDATAIN
      );

END struct;
